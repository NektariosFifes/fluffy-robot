{"ast":null,"code":"var _jsxFileName = \"/home/nek/WebstormProjects/fluffy-robot/ReactGoStat/src/components/TextPractical/InlineComp.tsx\";\nimport React from 'react';\nimport { ComponentWithDefaults } from '../UtilityModules'; //\n\nconst defaults = {\n  normal: false\n};\n\n/**\n * test\n * @param props\n * @returns {JSX.Element}\n */\nfunction marker(props) {\n  const {\n    normal,\n    border,\n    sketch,\n    ribbon,\n    arrow,\n    children\n  } = props;\n  const PassedProps = {\n    normal: normal,\n    border: border,\n    sketch: sketch,\n    ribbon: ribbon,\n    arrow: arrow\n  };\n  let tag;\n\n  for (const [key, value] of Object.entries(PassedProps)) {\n    if (value && !tag && tag != 'normal') tag = String(key);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-tag\": tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, children, \" \"));\n}\n\nconst memoizedComp = React.memo(marker);\nexport default ComponentWithDefaults(memoizedComp, defaults);","map":{"version":3,"sources":["/home/nek/WebstormProjects/fluffy-robot/ReactGoStat/src/components/TextPractical/InlineComp.tsx"],"names":["React","ComponentWithDefaults","defaults","normal","marker","props","border","sketch","ribbon","arrow","children","PassedProps","tag","key","value","Object","entries","String","memoizedComp","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,qBAAR,QAAoC,mBAApC,C,CAEA;;AASA,MAAMC,QAAmB,GAAG;AACxBC,EAAAA,MAAM,EAAE;AADgB,CAA5B;;AASA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAgE;AAC5D,QAAM;AAAEF,IAAAA,MAAF;AAAUG,IAAAA,MAAV;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA,KAAlC;AAAyCC,IAAAA;AAAzC,MAAsDL,KAA5D;AAEA,QAAMM,WAAsB,GAAG;AAC3BR,IAAAA,MAAM,EAAEA,MADmB;AAE3BG,IAAAA,MAAM,EAAEA,MAFmB;AAG3BC,IAAAA,MAAM,EAAEA,MAHmB;AAI3BC,IAAAA,MAAM,EAAEA,MAJmB;AAK3BC,IAAAA,KAAK,EAAEA;AALoB,GAA/B;AAQA,MAAIG,GAAJ;;AAGA,OAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAeL,WAAf,CAA3B,EAAwD;AACpD,QAAIG,KAAK,IAAI,CAACF,GAAV,IAAiBA,GAAG,IAAI,QAA5B,EAAsCA,GAAG,GAAGK,MAAM,CAACJ,GAAD,CAAZ;AACzC;;AACD,sBACI,uDACI;AAAM,gBAAUD,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBF,QAAtB,MADJ,CADJ;AAKH;;AACD,MAAMQ,YAAY,GAAGlB,KAAK,CAACmB,IAAN,CAAWf,MAAX,CAArB;AAEA,eAAeH,qBAAqB,CAACiB,YAAD,EAAehB,QAAf,CAApC","sourcesContent":["import React from 'react';\nimport {ComponentWithDefaults} from '../UtilityModules';\n\n//\ninterface CompProps {\n    normal?: boolean;\n    border?: boolean;\n    sketch?: boolean;\n    ribbon?: boolean;\n    arrow?: boolean;\n}\n\nconst defaults: CompProps = {\n    normal: false,\n};\n\ntype BasicHtmlAttributes = Omit<React.HTMLAttributes<any>, keyof CompProps>;\n\ntype CompAttributes = CompProps & typeof defaults & BasicHtmlAttributes;\ntype InlineAttrArray = Array<boolean>;\n\n/**\n * test\n * @param props\n * @returns {JSX.Element}\n */\nfunction marker(props: React.PropsWithChildren<CompAttributes>) {\n    const { normal, border, sketch, ribbon, arrow, children } = props;\n\n    const PassedProps: CompProps = {\n        normal: normal,\n        border: border,\n        sketch: sketch,\n        ribbon: ribbon,\n        arrow: arrow,\n    };\n\n    let tag;\n\n\n    for (const [key, value] of Object.entries(PassedProps)) {\n        if (value && !tag && tag != 'normal') tag = String(key);\n    }\n    return (\n        <>\n            <span data-tag={tag}>{children} </span>\n        </>\n    );\n}\nconst memoizedComp = React.memo(marker);\n\nexport default ComponentWithDefaults(memoizedComp, defaults);\n"]},"metadata":{},"sourceType":"module"}